#!/usr/bin/perl -w

#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::NetworksDB;
use esmith::util;

my $mac = shift || die("Missing MAC argument");
my $ip = pop || die("Missing IP argument");

my $ndb = esmith::NetworksDB->open_ro or die("Could not open Networks DB");;

sub is_reserved_ip
{
    my $checkIp = shift;

    my @reserved = ('127.0.0.1');
    foreach ($ndb->interfaces()) {
        my $ipaddr = $_->prop('ipaddr') || next;
        push (@reserved, $ipaddr);
    }
    
    if ( grep { $checkIp eq $_ } @reserved )
    {
	return 1; # false
    }

    return 0; # true
}

sub is_local_ip
{
    my $localip = shift;

    # Make sure that the IP is indeed local.
    my @interfaces = $ndb->green();
    push(@interfaces, $ndb->blue());

    foreach my $i (@interfaces)
    {
        my $ipaddr = $i->prop('ipaddr') || next;
        my $mask = $i->prop('netmask') || next;
        if (Net::IPv4Addr::ipv4_in_network(esmith::util::computeLocalNetworkShortSpec($ipaddr,$mask), $localip))
        {
            return 1;
        }
    }
    # Not OK. The IP is not on any of our local networks.
    return 0;
}

#
# Fail, if ip is reserved or is not in local networks
#
if(is_reserved_ip($ip)) 
{
    exit 3;
} 
elsif( ! is_local_ip($ip)) 
{
    exit 4;
}

# Success
exit 0;
